function output_to_pdf(s)
% function for combining specified output TeX files into one PDF file, with
% hyper-referencing. This will produce a TeX file that will contain ALL the
% images generated by the GUI (i.e., masses, ratios, cell images) that are
% defined in the file with meta-instructions.
% (c) Lubos Polerecky, 14.10.2009, MPI Bremen

% get default base_dir
base_dir = s.base_dir;

% specify the meta-file with the meta-instructions
infile = s.metafile;

global verbose

if 0
    % specify the final output filename
    disp('Define output LaTeX file')
    [FileName,newdir,newext] = uiputfile('*.tex', 'Choose output LaTeX file', base_dir);
    if(FileName~=0)
        foutname = [newdir, FileName];
    else
        % default
        %[pathstr, name, ext, versn] = fileparts(infile);
        %foutname = [pathstr,delimiter,name,'.tex'];
        foutname = [];
    end
end

% the output filename will have the same base-name as the metafile
if(~isempty(s.metafile))
    [fdir, fn, fext] = fileparts(s.metafile);
    foutname = [fdir, delimiter, fn, delimiter, fn, '.tex'];
else
    foutname = [];
end

if(~isempty(foutname))
    % extract the directory names from the input meta-file
    fn = infile;
    if(exist(fn)==2)
        fid=fopen(fn,'r');
        j=0;
        all_dirs=[];
        while 1
            tline=fgetl(fid);
            if ~ischar(tline) | isempty(tline), break, end; 
            if(tline(1)~='#')
                [token,remain]=strtok(tline);
                j=j+1;
                all_dirs{j}=strtok(remain);
            end
        end
        fclose(fid);
    end

    % generate the PDF-LaTeX file
    fn = foutname;
    fid=fopen(fn,'w');
    fprintf(fid,'\\documentclass[12pt,a4paper]{article}\n','');
    fprintf(fid,'\\usepackage{graphicx}\n','');
    fprintf(fid,'\\usepackage[left=1in,right=1in,top=1in,bottom=1in]{geometry}\n','');
    fprintf(fid,'\\usepackage[bookmarksopen=true,pdfauthor=Look@NanoSIMS,pdftitle=%s]{hyperref}\n',...
    regexprep(s.metafile,'\','/'));
    fprintf(fid,'\\begin{document}\n\n','');

    for ii=1:length(all_dirs)       
        fname = [base_dir,all_dirs{ii},delimiter,'output.tex'];
        if(exist(fname)~=2)
            fname = [base_dir,all_dirs{ii},delimiter,'outputG.tex'];
            bdir = [base_dir,all_dirs{ii}];
            bdir = regexprep(bdir,'\','/');
        end
        if verbose 
            disp(['Processing file ',fname]);
        end
        if ii>1
            fprintf(fid,'\n\\newpage\n\n');
        end
        s=parseoutputtex(fname);
        % add the section with the current filename, also the label
        s1=regexprep(all_dirs{ii},'_','\\_');
        s2=regexprep(all_dirs{ii},'_','-');
        fprintf(fid,'\\section{%s}\\label{%d: %s}\n\\def\\bdir{%s}\n',s1,ii,s2,bdir);
        for jj=1:length(s)
            % do some finetuning
            s{jj} = regexprep(s{jj},'0.45','0.42');
            s{jj} = regexprep(s{jj},'pdf','\\bdir/pdf');
            fprintf(fid,'%s\n',s{jj});
        end
    end

    fprintf(fid,'%s\n','\end{document}');
    fclose(fid);
    fprintf(1,'Output written to %s\n',fn);
    mepstopdf(fn,'pdflatex',0);
    mepstopdf(fn,'pdflatex',1);
    %disp('You can use pdflatex to generate a PDF file from it');
end
